From: Jason Rhinelander <jason@imaginary.ca>
Date: Tue, 20 Feb 2024 10:55:20 -0400
Subject: Downgrade warning firing on connection timeouts

There are way too many of these in storage serever logs in practice just
from connection testing to endpoints that aren't currently reachable,
and this isn't (necessarily) indicative of a local problem.  This
downgrades it to debug; if the application is doing something here that
should be warned about then it can warn about it in a close handler.
---
 src/connection.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/connection.cpp b/src/connection.cpp
index 9b030e2..c8bdbfb 100644
--- a/src/connection.cpp
+++ b/src/connection.cpp
@@ -1662,7 +1662,7 @@ namespace oxen::quic
                     auto& self = *static_cast<Connection*>(self_);
                     if (auto rv = ngtcp2_conn_handle_expiry(self, get_timestamp().count()); rv != 0)
                     {
-                        log::warning(
+                        log::debug(
                                 log_cat, "Error: expiry handler invocation returned error code: {}", ngtcp2_strerror(rv));
                         self.endpoint().close_connection(self, io_error{rv});
                         return;
